{"version":3,"file":"extension.js","sources":["../../../../../src/EventHandlers.tsx","../../../../../src/TemplateControl/TemplateControl.tsx","../../../../../src/Index.ts"],"sourcesContent":["import { Layout } from \"@docsvision/webclient/System/Layout\";\r\nimport { ICancelableEventArgs } from \"@docsvision/webclient/System/ICancelableEventArgs\";\r\nimport { ICardStateChangingEventArgs } from \"@docsvision/webclient/System/ICardStateChangingEventArgs\";\r\nimport { $UrlResolver } from \"@docsvision/webclient/System/$UrlResolver\";\r\nimport { UrlResolver } from \"@docsvision/webclient/System/UrlResolver\";\r\nimport { $RequestManager, IRequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { $RouterNavigation } from \"@docsvision/webclient/System/$Router\";\r\nimport { IEventArgs } from \"@docsvision/webclient/System/IEventArgs\";\r\n\r\nexport async function getIsTemplateCardInfo(requestManager: IRequestManager, urlResolver: UrlResolver, cardId: string): Promise<boolean> {\r\n    let url = urlResolver.resolveApiUrl(\"GetIsTemplateCardInfo\", \"CardTemplate\");\r\n    url += \"?cardId=\" + cardId;\r\n    return requestManager.get<boolean>(url);\r\n}\r\n\r\nexport async function setIsTemplateCardValue(requestManager: IRequestManager, urlResolver: UrlResolver, cardId: string, value: boolean): Promise<{}> {\r\n    let url = urlResolver.resolveApiUrl(\"SetIsTemplateCardValue\", \"CardTemplate\");\r\n    let postData = {\r\n        cardId: cardId,\r\n        value: value\r\n    }\r\n    return requestManager.post(url, JSON.stringify(postData));\r\n}","import { BaseControlParams, BaseControlState, BaseControl } from \"@docsvision/webclient/System/BaseControl\";\r\nimport { rw } from \"@docsvision/webclient/System/Readwrite\";\r\nimport { r } from \"@docsvision/webclient/System/Readonly\";\r\nimport { IBindingResult } from \"@docsvision/webclient/System/IBindingResult\";\r\nimport { handler } from \"@docsvision/webclient/System/Handler\";\r\nimport { getBindingResult } from \"@docsvision/webclient/System/GetBindingResult\";\r\nimport { ControlImpl } from \"@docsvision/webclient/System/ControlImpl\";\r\nimport React from \"react\";\r\nimport { getIsTemplateCardInfo, setIsTemplateCardValue } from \"../EventHandlers\";\r\nimport { $RequestManager } from \"@docsvision/webclient/System/$RequestManager\";\r\nimport { $UrlResolver } from \"@docsvision/webclient/System/$UrlResolver\";\r\nimport { $Layout } from \"@docsvision/webclient/System/$Layout\";\r\nimport { MessageBox } from \"@docsvision/webclient/Helpers/MessageBox/MessageBox\";\r\n\r\nexport class TemplateControlParams extends BaseControlParams {\r\n    standardCssClass?: string = \"template-control\";\r\n\r\n    @rw imageHeight: number;\r\n\r\n    @rw imageWidth: number;\r\n\r\n    @r isTemplate: boolean;\r\n\r\n    @r binding: IBindingResult<boolean>;\r\n\r\n    @r isBindingOperationAvailable: boolean;\r\n\r\n    @r services?: $RequestManager & $UrlResolver & $Layout;\r\n}\r\n\r\nexport interface TemplateControlState extends BaseControlState, TemplateControlParams {\r\n}\r\n\r\nexport class TemplateControl extends BaseControl<TemplateControlParams, TemplateControlState> {\r\n    constructor(params: TemplateControlParams) {\r\n        super(params);\r\n\r\n        this.onClick = this.onClick.bind(this);\r\n    }\r\n\r\n    @handler(\"binding\")\r\n    set isBindingOperationAvailable(binding: IBindingResult<boolean>) {\r\n        this.state.isBindingOperationAvailable = !binding || this.layout.editOperations.available(binding.editOperation);\r\n        this.state.isTemplate = binding.value;\r\n        this.state.binding = binding;\r\n    }\r\n\r\n    protected getBindings(): IBindingResult<string>[] {\r\n        return [getBindingResult(this.state.binding, this.state.isTemplate, \"Является шаблоном\")];\r\n    }\r\n\r\n    async onClick() {\r\n        if (this.state.isBindingOperationAvailable) {\r\n            await setIsTemplateCardValue(this.state.services.requestManager, this.state.services.urlResolver, \r\n                this.state.services.layout.cardInfo.id, this.state.isTemplate);\r\n\r\n            this.setState({\r\n                isTemplate: await getIsTemplateCardInfo(this.state.services.requestManager, this.state.services.urlResolver, this.state.services.layout.cardInfo.id)\r\n            });\r\n        }\r\n        else\r\n            MessageBox.ShowInfo(\"У вас недостаточно прав для перевода карточки в шаблон!\");\r\n    }\r\n\r\n    createParams() {\r\n        return new TemplateControlParams();\r\n    }\r\n\r\n    createImpl() {\r\n        return new ControlImpl(this.props, this.state, this.renderControl.bind(this));\r\n    }\r\n\r\n    async componentDidMount() {\r\n        super.componentDidMount();\r\n\r\n        this.setState({\r\n            isTemplate: await getIsTemplateCardInfo(this.state.services.requestManager, this.state.services.urlResolver, this.state.services.layout.cardInfo.id)\r\n        });\r\n    }\r\n\r\n    renderControl() {\r\n        if (this.state.isBindingOperationAvailable) {\r\n            if (this.state.isTemplate)\r\n                this.state.customCssClasses = \"is-template\";\r\n            else\r\n                this.state.customCssClasses = \"no-template\";\r\n        }\r\n        else\r\n            this.state.customCssClasses = \"disable\";\r\n\r\n        return (\r\n            <div onClick={this.onClick}>\r\n                <span style={{width: this.state.imageWidth, height: this.state.imageHeight}}>{this.state.isTemplate ? \"Шаблон\" : \"Не шаблон\"}</span>\r\n            </div>\r\n        )\r\n    }\r\n}","﻿import { extensionManager } from \"@docsvision/webclient/System/ExtensionManager\";\r\nimport * as EventHandlers from \"./EventHandlers\";\r\nimport { TemplateControl } from \"./TemplateControl/TemplateControl\";\r\n\r\n\r\n// Главная входная точка всего расширения\r\n// Данный файл должен импортировать прямо или косвенно все остальные файлы, \r\n// чтобы rollup смог собрать их все в один бандл.\r\n\r\n// Регистрация расширения позволяет корректно установить все\r\n// обработчики событий, сервисы и прочие сущности web-приложения.\r\nextensionManager.registerExtension({\r\n    name: \"Exam web extension\",\r\n    version: \"1.0\",\r\n    controls: [\r\n        { controlTypeName: \"TemplateControl\", constructor: TemplateControl }\r\n    ],\r\n    globalEventHandlers: [EventHandlers]\r\n})"],"names":["__extends","__decorate","rw","r","BaseControlParams","getBindingResult","MessageBox","ControlImpl","React","handler","BaseControl","extensionManager"],"mappings":"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"}